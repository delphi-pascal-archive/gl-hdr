uniform vec3 light0;
varying vec3 light_direction[1];
varying vec4 shadow[1];
varying vec3 eye_direction;
void main()
{
   gl_Position  = ftransform();
   gl_TexCoord[0] = gl_MultiTexCoord0;
   vec3 vVertex = vec3(gl_ModelViewMatrix * gl_Vertex);
   vec3 n = normalize(gl_NormalMatrix * gl_Normal);
   vec3 t = normalize(gl_NormalMatrix * gl_MultiTexCoord1.xyz);
   vec3 b = cross(n, t);
   mat3 tbnMatrix = mat3(t.x, b.x, n.x,
                         t.y, b.y, n.y,
                         t.z, b.z, n.z);
 vec3 tmp;
  tmp = (gl_LightSource[0].position.xyz - vVertex) * gl_LightSource[0].diffuse.w;
light_direction[0] = vec3(tbnMatrix * tmp);
   shadow[0].xyz = ( gl_Vertex.xyz - light0) * gl_LightSource[0].diffuse.w;
   shadow[0].w = 1.0;
   eye_direction = -vVertex;
   eye_direction = tbnMatrix * eye_direction;
}
